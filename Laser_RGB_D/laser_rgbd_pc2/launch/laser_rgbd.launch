<?xml version="1.0"?>

<launch>




<!--arg name="model" /-->
	<arg name="gui" default="false" />
	<!--param name="robot_description" textfile="$(arg model)" /-->
        <!--param name="robot_description" command="$(find xacro)/xacro.py '$(find awc_description)/urdf/urdf_test.xacro'" /-->
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find awc_description)/urdf/mybot.xacro'" />
	<param name="use_gui" value="$(arg gui)"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />


<!--
<include file="$(find awc_description)/urdf/show_awc_urdf.launch">
<arg name="model" value="$(find awc_description)/urdf/awc_robot.urdf" />
</include>
-->

 <!--master auto="start"/-->

<!-- Start the fake laser and laser -->


<!--	
<node pkg="rosserial_python" type="serial_node.py" args="/dev/ttyACM1" name="serial_node" respawn="false" output="screen"/>
-->



<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">

   <param name="fixed_frame" value = "odom"/>
   <param name="use_odom" value="true"/>
   <param name="publish_odom" value = "true"/>
   <param name="use_alpha_beta" value="true"/>
   <param name="max_iterations" value="10"/>
  </node> 




<include file="$(find awc_navigation)/launch_sbpl/awc_xtion_laser.launch" />



																																																																																																																																																																																																															




<!-- Converts to pointcloud and pointcloud_2 laser and xtion coordinates -->
<node name="laser_rgbd_pc2" pkg="laser_rgbd_pc2" type="laser_rgbd_pc2" respawn="false" output="screen" />


<!-- synchronises laser and RGBD data readings -->
<node name="laser_rgbd_registration" pkg="laser_rgbd_registration" type="laser_rgbd_registration" respawn="false" output="screen" />


<!-- synchronises laser and RGBD data readings -->
<node name="laser_rgbd_fusion" pkg="laser_rgbd_fusion" type="laser_rgbd_fusion" respawn="false" output="screen" />









</launch>




